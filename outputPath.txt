Breadth wins for t1 ?&G $&^*1 Aa ! 

Breadth path:
1  -> 2 -> 3 -> 4 -> 5 -> t
t  -> 5 -> 4 -> 3 -> 2 -> 1
1  -> BACK -> @ -> SPACE
SPACE  -> #+= -> CAPS
CAPS  -> CAPS(-u) -> GLOBE(-u) -> OK(-u) -> RETURN(-u) -> = -> ; -> ?
?  -> ; -> &
&  -> L -> K -> J -> H -> G
G  -> B -> SPACE(-u)
SPACE(-u)  -> #+=(-u)
#+=(-u)  -> ABC -> 3(-p) -> 4(-p) -> $
$  -> % -> ^ -> &(-p)
&(-p)  -> ^
^  -> &(-p) -> *(-p)
*(-p)  -> 8(-p) -> SPACE(-p) -> OK(-p) -> BACK(-p) -> 1(-p)
1(-p)  -> BACK(-p) -> -(-p) -> SPACE(-p)
SPACE(-p)  -> ABC
ABC  -> #+= -> CAPS
CAPS  -> 2 -> CAPS
CAPS  -> CAPS(-u) -> X -> S -> A
A  -> S -> X -> CAPS(-u)
CAPS(-u)  -> CAPS -> x -> s -> a
66 steps

Depth path:
1  -> BACK -> OK -> SPACE -> 7 -> u -> y -> t
t  -> 5 -> SPACE -> #+= -> 3 -> 2 -> 1
1  -> BACK -> OK -> SPACE
SPACE  -> #+= -> CAPS
CAPS  -> CAPS(-u) -> GLOBE(-u) -> OK(-u) -> RETURN(-u) -> = -> ; -> ?
?  -> ; -> &
&  -> ! -> SPACE(-u) -> M -> J -> H -> G
G  -> B -> SPACE(-u)
SPACE(-u)  -> #+=(-u)
#+=(-u)  -> ABC -> SPACE(-p) -> ,(-p) -> } -> { -> +(-p) -> \ -> $
$  -> 4(-p) -> SPACE(-p) -> 7(-p) -> &(-p)
&(-p)  -> ^
^  -> &(-p) -> *(-p)
*(-p)  -> 8(-p) -> SPACE(-p) -> ABC -> GLOBE(-p) -> 1(-p)
1(-p)  -> BACK(-p) -> OK(-p) -> SPACE(-p)
SPACE(-p)  -> ABC
ABC  -> #+= -> CAPS
CAPS  -> 2 -> CAPS
CAPS  -> CAPS(-u) -> GLOBE(-u) -> OK(-u) -> RETURN(-u) -> Q -> A
A  -> Z -> GLOBE(-u) -> CAPS(-u)
CAPS(-u)  -> CAPS -> 2 -> 1 -> q -> a
78 steps

